Nonterminals useless in grammar

    external_declarator_list
    type_specifier
    struct_specifier
    tag_opt
    tag
    declarator_list
    declarator
    variable_declarator


Terminals unused in grammar

    FLOATING_LITERAL
    CHARACTER_LITERAL
    DOT
    MAO
    WEN
    LB
    RB
    INV
    T_AUTO
    T_CASE
    T_CHAR
    T_CONST
    T_DEFAULT
    T_DO
    T_DOUBLE
    T_ENUM
    T_EXTERN
    T_FLOAT
    T_FOR
    T_GOTO
    T_INLINE
    T_LONG
    T_REGISTER
    T_RESTRICT
    T_SHORT
    T_SIGNED
    T_SIZEOF
    T_STATIC
    T_STRUCT
    T_SWITCH
    T_TYPEDEF
    T_UNION
    T_UNSIGNED
    T_VOLATILE


Rules useless in grammar

   56 variable_declarator: ID


Grammar

    0 $accept: program $end

    1 program: external_var_list external_declaration_list

    2 external_var_list: %empty
    3                  | external_var_list declaration

    4 external_declaration_list: external_declaration
    5                          | external_declaration external_declaration_list

    6 external_declaration: specifier function_declarator compound_statement

    7 specifier: T_VOID
    8          | T_INT

    9 function_declarator: ID LP parameter_list RP
   10                    | ID LP RP

   11 parameter_list: parameter_list COMMA parameter
   12               | parameter

   13 parameter: specifier ID

   14 compound_statement: LC declaration_list statement_list RC

   15 statement_list: %empty
   16               | statement_list statement

   17 statement: Exp SEMI
   18          | compound_statement
   19          | T_PRINT LP Exp COMMA Args RP SEMI
   20          | T_RETURN SEMI
   21          | T_RETURN Exp SEMI
   22          | T_IF LP Exp RP compound_statement
   23          | T_IF LP Exp RP compound_statement T_ELSE compound_statement
   24          | T_WHILE LP Exp RP compound_statement
   25          | T_BREAK SEMI
   26          | T_CONTINUE SEMI

   27 declaration_list: %empty
   28                 | declaration_list declaration

   29 declaration: specifier ID SEMI

   30 Exp: Exp ASSIGNOP Exp
   31    | Exp AND Exp
   32    | Exp OR Exp
   33    | Exp GE Exp
   34    | Exp LE Exp
   35    | Exp GEQ Exp
   36    | Exp LEQ Exp
   37    | Exp EQ Exp
   38    | Exp NE Exp
   39    | Exp PLUS Exp
   40    | Exp MINUS Exp
   41    | Exp STAR Exp
   42    | Exp DIV Exp
   43    | Exp MOD Exp
   44    | LP Exp RP
   45    | MINUS Exp
   46    | NOT Exp
   47    | ID LP Args RP
   48    | ID LP RP
   49    | T_READ LP RP
   50    | IDENTIFIER
   51    | INTEGER_LITERAL
   52    | STRING_LITERAL

   53 ID: IDENTIFIER

   54 Args: Args COMMA Exp
   55     | Exp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <expr> (258) 50 53
    INTEGER_LITERAL <expr> (259) 51
    FLOATING_LITERAL <expr> (260)
    CHARACTER_LITERAL <expr> (261)
    STRING_LITERAL <expr> (262) 52
    AND (263) 31
    OR (264) 32
    LEQ (265) 36
    GEQ (266) 35
    EQ (267) 37
    NE (268) 38
    MOD (269) 43
    PLUS (270) 39
    MINUS (271) 40 45
    STAR (272) 41
    DIV (273) 42
    ASSIGNOP (274) 30
    LE (275) 34
    GE (276) 33
    DOT (277)
    COMMA (278) 11 19 54
    MAO (279)
    SEMI (280) 17 19 20 21 25 26 29
    WEN (281)
    LP (282) 9 10 19 22 23 24 44 47 48 49
    RP (283) 9 10 19 22 23 24 44 47 48 49
    LB (284)
    RB (285)
    LC (286) 14
    RC (287) 14
    NOT (288) 46
    INV (289)
    T_AUTO (290)
    T_BREAK (291) 25
    T_CASE (292)
    T_CHAR (293)
    T_CONST (294)
    T_CONTINUE (295) 26
    T_DEFAULT (296)
    T_DO (297)
    T_DOUBLE (298)
    T_ELSE (299) 23
    T_ENUM (300)
    T_EXTERN (301)
    T_FLOAT (302)
    T_FOR (303)
    T_GOTO (304)
    T_IF (305) 22 23
    T_INLINE (306)
    T_INT (307) 8
    T_LONG (308)
    T_REGISTER (309)
    T_RESTRICT (310)
    T_RETURN (311) 20 21
    T_SHORT (312)
    T_SIGNED (313)
    T_SIZEOF (314)
    T_STATIC (315)
    T_STRUCT (316)
    T_SWITCH (317)
    T_TYPEDEF (318)
    T_UNION (319)
    T_UNSIGNED (320)
    T_VOID (321) 7
    T_VOLATILE (322)
    T_WHILE (323) 24
    T_PRINT (324) 19
    T_READ (325) 49
    LOWER_THAN_ELSE (326)


Nonterminals, with rules where they appear

    $accept (72)
        on left: 0
    program <expr> (73)
        on left: 1
        on right: 0
    external_var_list <expr> (74)
        on left: 2 3
        on right: 1 3
    external_declaration_list <expr> (75)
        on left: 4 5
        on right: 1 5
    external_declaration <expr> (76)
        on left: 6
        on right: 4 5
    specifier <expr> (77)
        on left: 7 8
        on right: 6 13 29
    function_declarator <expr> (78)
        on left: 9 10
        on right: 6
    parameter_list <expr> (79)
        on left: 11 12
        on right: 9 11
    parameter <expr> (80)
        on left: 13
        on right: 11 12
    compound_statement <expr> (81)
        on left: 14
        on right: 6 18 22 23 24
    statement_list <expr> (82)
        on left: 15 16
        on right: 14 16
    statement <expr> (83)
        on left: 17 18 19 20 21 22 23 24 25 26
        on right: 16
    declaration_list <expr> (84)
        on left: 27 28
        on right: 14 28
    declaration <expr> (85)
        on left: 29
        on right: 3 28
    Exp <expr> (86)
        on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
        on right: 17 19 21 22 23 24 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 54 55
    ID <expr> (87)
        on left: 53
        on right: 9 10 13 29 47 48
    Args <expr> (88)
        on left: 54 55
        on right: 19 47 54


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (external_var_list)

    program            go to state 1
    external_var_list  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: external_var_list • external_declaration_list
    3 external_var_list: external_var_list • declaration

    T_INT   shift, and go to state 4
    T_VOID  shift, and go to state 5

    external_declaration_list  go to state 6
    external_declaration       go to state 7
    specifier                  go to state 8
    declaration                go to state 9


State 3

    0 $accept: program $end •

    $default  accept


State 4

    8 specifier: T_INT •

    $default  reduce using rule 8 (specifier)


State 5

    7 specifier: T_VOID •

    $default  reduce using rule 7 (specifier)


State 6

    1 program: external_var_list external_declaration_list •

    $default  reduce using rule 1 (program)


State 7

    4 external_declaration_list: external_declaration •
    5                          | external_declaration • external_declaration_list

    T_INT   shift, and go to state 4
    T_VOID  shift, and go to state 5

    $default  reduce using rule 4 (external_declaration_list)

    external_declaration_list  go to state 10
    external_declaration       go to state 7
    specifier                  go to state 11


State 8

    6 external_declaration: specifier • function_declarator compound_statement
   29 declaration: specifier • ID SEMI

    IDENTIFIER  shift, and go to state 12

    function_declarator  go to state 13
    ID                   go to state 14


State 9

    3 external_var_list: external_var_list declaration •

    $default  reduce using rule 3 (external_var_list)


State 10

    5 external_declaration_list: external_declaration external_declaration_list •

    $default  reduce using rule 5 (external_declaration_list)


State 11

    6 external_declaration: specifier • function_declarator compound_statement

    IDENTIFIER  shift, and go to state 12

    function_declarator  go to state 13
    ID                   go to state 15


State 12

   53 ID: IDENTIFIER •

    $default  reduce using rule 53 (ID)


State 13

    6 external_declaration: specifier function_declarator • compound_statement

    LC  shift, and go to state 16

    compound_statement  go to state 17


State 14

    9 function_declarator: ID • LP parameter_list RP
   10                    | ID • LP RP
   29 declaration: specifier ID • SEMI

    SEMI  shift, and go to state 18
    LP    shift, and go to state 19


State 15

    9 function_declarator: ID • LP parameter_list RP
   10                    | ID • LP RP

    LP  shift, and go to state 19


State 16

   14 compound_statement: LC • declaration_list statement_list RC

    $default  reduce using rule 27 (declaration_list)

    declaration_list  go to state 20


State 17

    6 external_declaration: specifier function_declarator compound_statement •

    $default  reduce using rule 6 (external_declaration)


State 18

   29 declaration: specifier ID SEMI •

    $default  reduce using rule 29 (declaration)


State 19

    9 function_declarator: ID LP • parameter_list RP
   10                    | ID LP • RP

    RP      shift, and go to state 21
    T_INT   shift, and go to state 4
    T_VOID  shift, and go to state 5

    specifier       go to state 22
    parameter_list  go to state 23
    parameter       go to state 24


State 20

   14 compound_statement: LC declaration_list • statement_list RC
   28 declaration_list: declaration_list • declaration

    T_INT   shift, and go to state 4
    T_VOID  shift, and go to state 5

    $default  reduce using rule 15 (statement_list)

    specifier       go to state 25
    statement_list  go to state 26
    declaration     go to state 27


State 21

   10 function_declarator: ID LP RP •

    $default  reduce using rule 10 (function_declarator)


State 22

   13 parameter: specifier • ID

    IDENTIFIER  shift, and go to state 12

    ID  go to state 28


State 23

    9 function_declarator: ID LP parameter_list • RP
   11 parameter_list: parameter_list • COMMA parameter

    COMMA  shift, and go to state 29
    RP     shift, and go to state 30


State 24

   12 parameter_list: parameter •

    $default  reduce using rule 12 (parameter_list)


State 25

   29 declaration: specifier • ID SEMI

    IDENTIFIER  shift, and go to state 12

    ID  go to state 31


State 26

   14 compound_statement: LC declaration_list statement_list • RC
   16 statement_list: statement_list • statement

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    LC               shift, and go to state 16
    RC               shift, and go to state 37
    NOT              shift, and go to state 38
    T_BREAK          shift, and go to state 39
    T_CONTINUE       shift, and go to state 40
    T_IF             shift, and go to state 41
    T_RETURN         shift, and go to state 42
    T_WHILE          shift, and go to state 43
    T_PRINT          shift, and go to state 44
    T_READ           shift, and go to state 45

    compound_statement  go to state 46
    statement           go to state 47
    Exp                 go to state 48
    ID                  go to state 49


State 27

   28 declaration_list: declaration_list declaration •

    $default  reduce using rule 28 (declaration_list)


State 28

   13 parameter: specifier ID •

    $default  reduce using rule 13 (parameter)


State 29

   11 parameter_list: parameter_list COMMA • parameter

    T_INT   shift, and go to state 4
    T_VOID  shift, and go to state 5

    specifier  go to state 22
    parameter  go to state 50


State 30

    9 function_declarator: ID LP parameter_list RP •

    $default  reduce using rule 9 (function_declarator)


State 31

   29 declaration: specifier ID • SEMI

    SEMI  shift, and go to state 18


State 32

   50 Exp: IDENTIFIER •
   53 ID: IDENTIFIER •

    LP        reduce using rule 53 (ID)
    $default  reduce using rule 50 (Exp)


State 33

   51 Exp: INTEGER_LITERAL •

    $default  reduce using rule 51 (Exp)


State 34

   52 Exp: STRING_LITERAL •

    $default  reduce using rule 52 (Exp)


State 35

   45 Exp: MINUS • Exp

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 51
    ID   go to state 49


State 36

   44 Exp: LP • Exp RP

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 52
    ID   go to state 49


State 37

   14 compound_statement: LC declaration_list statement_list RC •

    $default  reduce using rule 14 (compound_statement)


State 38

   46 Exp: NOT • Exp

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 53
    ID   go to state 49


State 39

   25 statement: T_BREAK • SEMI

    SEMI  shift, and go to state 54


State 40

   26 statement: T_CONTINUE • SEMI

    SEMI  shift, and go to state 55


State 41

   22 statement: T_IF • LP Exp RP compound_statement
   23          | T_IF • LP Exp RP compound_statement T_ELSE compound_statement

    LP  shift, and go to state 56


State 42

   20 statement: T_RETURN • SEMI
   21          | T_RETURN • Exp SEMI

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    SEMI             shift, and go to state 57
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 58
    ID   go to state 49


State 43

   24 statement: T_WHILE • LP Exp RP compound_statement

    LP  shift, and go to state 59


State 44

   19 statement: T_PRINT • LP Exp COMMA Args RP SEMI

    LP  shift, and go to state 60


State 45

   49 Exp: T_READ • LP RP

    LP  shift, and go to state 61


State 46

   18 statement: compound_statement •

    $default  reduce using rule 18 (statement)


State 47

   16 statement_list: statement_list statement •

    $default  reduce using rule 16 (statement_list)


State 48

   17 statement: Exp • SEMI
   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp

    AND       shift, and go to state 62
    OR        shift, and go to state 63
    LEQ       shift, and go to state 64
    GEQ       shift, and go to state 65
    EQ        shift, and go to state 66
    NE        shift, and go to state 67
    MOD       shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    ASSIGNOP  shift, and go to state 73
    LE        shift, and go to state 74
    GE        shift, and go to state 75
    SEMI      shift, and go to state 76


State 49

   47 Exp: ID • LP Args RP
   48    | ID • LP RP

    LP  shift, and go to state 77


State 50

   11 parameter_list: parameter_list COMMA parameter •

    $default  reduce using rule 11 (parameter_list)


State 51

   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp
   45    | MINUS Exp •

    MOD   shift, and go to state 68
    STAR  shift, and go to state 71
    DIV   shift, and go to state 72

    $default  reduce using rule 45 (Exp)


State 52

   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp
   44    | LP Exp • RP

    AND       shift, and go to state 62
    OR        shift, and go to state 63
    LEQ       shift, and go to state 64
    GEQ       shift, and go to state 65
    EQ        shift, and go to state 66
    NE        shift, and go to state 67
    MOD       shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    ASSIGNOP  shift, and go to state 73
    LE        shift, and go to state 74
    GE        shift, and go to state 75
    RP        shift, and go to state 78


State 53

   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp
   46    | NOT Exp •

    $default  reduce using rule 46 (Exp)


State 54

   25 statement: T_BREAK SEMI •

    $default  reduce using rule 25 (statement)


State 55

   26 statement: T_CONTINUE SEMI •

    $default  reduce using rule 26 (statement)


State 56

   22 statement: T_IF LP • Exp RP compound_statement
   23          | T_IF LP • Exp RP compound_statement T_ELSE compound_statement

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 79
    ID   go to state 49


State 57

   20 statement: T_RETURN SEMI •

    $default  reduce using rule 20 (statement)


State 58

   21 statement: T_RETURN Exp • SEMI
   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp

    AND       shift, and go to state 62
    OR        shift, and go to state 63
    LEQ       shift, and go to state 64
    GEQ       shift, and go to state 65
    EQ        shift, and go to state 66
    NE        shift, and go to state 67
    MOD       shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    ASSIGNOP  shift, and go to state 73
    LE        shift, and go to state 74
    GE        shift, and go to state 75
    SEMI      shift, and go to state 80


State 59

   24 statement: T_WHILE LP • Exp RP compound_statement

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 81
    ID   go to state 49


State 60

   19 statement: T_PRINT LP • Exp COMMA Args RP SEMI

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 82
    ID   go to state 49


State 61

   49 Exp: T_READ LP • RP

    RP  shift, and go to state 83


State 62

   31 Exp: Exp AND • Exp

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 84
    ID   go to state 49


State 63

   32 Exp: Exp OR • Exp

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 85
    ID   go to state 49


State 64

   36 Exp: Exp LEQ • Exp

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 86
    ID   go to state 49


State 65

   35 Exp: Exp GEQ • Exp

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 87
    ID   go to state 49


State 66

   37 Exp: Exp EQ • Exp

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 88
    ID   go to state 49


State 67

   38 Exp: Exp NE • Exp

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 89
    ID   go to state 49


State 68

   43 Exp: Exp MOD • Exp

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 90
    ID   go to state 49


State 69

   39 Exp: Exp PLUS • Exp

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 91
    ID   go to state 49


State 70

   40 Exp: Exp MINUS • Exp

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 92
    ID   go to state 49


State 71

   41 Exp: Exp STAR • Exp

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 93
    ID   go to state 49


State 72

   42 Exp: Exp DIV • Exp

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 94
    ID   go to state 49


State 73

   30 Exp: Exp ASSIGNOP • Exp

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 95
    ID   go to state 49


State 74

   34 Exp: Exp LE • Exp

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 96
    ID   go to state 49


State 75

   33 Exp: Exp GE • Exp

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 97
    ID   go to state 49


State 76

   17 statement: Exp SEMI •

    $default  reduce using rule 17 (statement)


State 77

   47 Exp: ID LP • Args RP
   48    | ID LP • RP

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    RP               shift, and go to state 98
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp   go to state 99
    ID    go to state 49
    Args  go to state 100


State 78

   44 Exp: LP Exp RP •

    $default  reduce using rule 44 (Exp)


State 79

   22 statement: T_IF LP Exp • RP compound_statement
   23          | T_IF LP Exp • RP compound_statement T_ELSE compound_statement
   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp

    AND       shift, and go to state 62
    OR        shift, and go to state 63
    LEQ       shift, and go to state 64
    GEQ       shift, and go to state 65
    EQ        shift, and go to state 66
    NE        shift, and go to state 67
    MOD       shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    ASSIGNOP  shift, and go to state 73
    LE        shift, and go to state 74
    GE        shift, and go to state 75
    RP        shift, and go to state 101


State 80

   21 statement: T_RETURN Exp SEMI •

    $default  reduce using rule 21 (statement)


State 81

   24 statement: T_WHILE LP Exp • RP compound_statement
   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp

    AND       shift, and go to state 62
    OR        shift, and go to state 63
    LEQ       shift, and go to state 64
    GEQ       shift, and go to state 65
    EQ        shift, and go to state 66
    NE        shift, and go to state 67
    MOD       shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    ASSIGNOP  shift, and go to state 73
    LE        shift, and go to state 74
    GE        shift, and go to state 75
    RP        shift, and go to state 102


State 82

   19 statement: T_PRINT LP Exp • COMMA Args RP SEMI
   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp

    AND       shift, and go to state 62
    OR        shift, and go to state 63
    LEQ       shift, and go to state 64
    GEQ       shift, and go to state 65
    EQ        shift, and go to state 66
    NE        shift, and go to state 67
    MOD       shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    ASSIGNOP  shift, and go to state 73
    LE        shift, and go to state 74
    GE        shift, and go to state 75
    COMMA     shift, and go to state 103


State 83

   49 Exp: T_READ LP RP •

    $default  reduce using rule 49 (Exp)


State 84

   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   31    | Exp AND Exp •
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp

    LEQ    shift, and go to state 64
    GEQ    shift, and go to state 65
    EQ     shift, and go to state 66
    NE     shift, and go to state 67
    MOD    shift, and go to state 68
    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70
    STAR   shift, and go to state 71
    DIV    shift, and go to state 72
    LE     shift, and go to state 74
    GE     shift, and go to state 75

    $default  reduce using rule 31 (Exp)


State 85

   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   32    | Exp OR Exp •
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp

    AND    shift, and go to state 62
    LEQ    shift, and go to state 64
    GEQ    shift, and go to state 65
    EQ     shift, and go to state 66
    NE     shift, and go to state 67
    MOD    shift, and go to state 68
    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70
    STAR   shift, and go to state 71
    DIV    shift, and go to state 72
    LE     shift, and go to state 74
    GE     shift, and go to state 75

    $default  reduce using rule 32 (Exp)


State 86

   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   36    | Exp LEQ Exp •
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp

    MOD    shift, and go to state 68
    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70
    STAR   shift, and go to state 71
    DIV    shift, and go to state 72

    $default  reduce using rule 36 (Exp)


State 87

   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   35    | Exp GEQ Exp •
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp

    MOD    shift, and go to state 68
    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70
    STAR   shift, and go to state 71
    DIV    shift, and go to state 72

    $default  reduce using rule 35 (Exp)


State 88

   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   37    | Exp EQ Exp •
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp

    MOD    shift, and go to state 68
    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70
    STAR   shift, and go to state 71
    DIV    shift, and go to state 72

    $default  reduce using rule 37 (Exp)


State 89

   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   38    | Exp NE Exp •
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp

    MOD    shift, and go to state 68
    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70
    STAR   shift, and go to state 71
    DIV    shift, and go to state 72

    $default  reduce using rule 38 (Exp)


State 90

   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp
   43    | Exp MOD Exp •

    $default  reduce using rule 43 (Exp)


State 91

   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   39    | Exp PLUS Exp •
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp

    MOD   shift, and go to state 68
    STAR  shift, and go to state 71
    DIV   shift, and go to state 72

    $default  reduce using rule 39 (Exp)


State 92

   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   40    | Exp MINUS Exp •
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp

    MOD   shift, and go to state 68
    STAR  shift, and go to state 71
    DIV   shift, and go to state 72

    $default  reduce using rule 40 (Exp)


State 93

   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   41    | Exp STAR Exp •
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp

    $default  reduce using rule 41 (Exp)


State 94

   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   42    | Exp DIV Exp •
   43    | Exp • MOD Exp

    $default  reduce using rule 42 (Exp)


State 95

   30 Exp: Exp • ASSIGNOP Exp
   30    | Exp ASSIGNOP Exp •
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp

    AND       shift, and go to state 62
    OR        shift, and go to state 63
    LEQ       shift, and go to state 64
    GEQ       shift, and go to state 65
    EQ        shift, and go to state 66
    NE        shift, and go to state 67
    MOD       shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    ASSIGNOP  shift, and go to state 73
    LE        shift, and go to state 74
    GE        shift, and go to state 75

    $default  reduce using rule 30 (Exp)


State 96

   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   34    | Exp LE Exp •
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp

    MOD    shift, and go to state 68
    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70
    STAR   shift, and go to state 71
    DIV    shift, and go to state 72

    $default  reduce using rule 34 (Exp)


State 97

   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   33    | Exp GE Exp •
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp

    MOD    shift, and go to state 68
    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70
    STAR   shift, and go to state 71
    DIV    shift, and go to state 72

    $default  reduce using rule 33 (Exp)


State 98

   48 Exp: ID LP RP •

    $default  reduce using rule 48 (Exp)


State 99

   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp
   55 Args: Exp •

    AND       shift, and go to state 62
    OR        shift, and go to state 63
    LEQ       shift, and go to state 64
    GEQ       shift, and go to state 65
    EQ        shift, and go to state 66
    NE        shift, and go to state 67
    MOD       shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    ASSIGNOP  shift, and go to state 73
    LE        shift, and go to state 74
    GE        shift, and go to state 75

    $default  reduce using rule 55 (Args)


State 100

   47 Exp: ID LP Args • RP
   54 Args: Args • COMMA Exp

    COMMA  shift, and go to state 104
    RP     shift, and go to state 105


State 101

   22 statement: T_IF LP Exp RP • compound_statement
   23          | T_IF LP Exp RP • compound_statement T_ELSE compound_statement

    LC  shift, and go to state 16

    compound_statement  go to state 106


State 102

   24 statement: T_WHILE LP Exp RP • compound_statement

    LC  shift, and go to state 16

    compound_statement  go to state 107


State 103

   19 statement: T_PRINT LP Exp COMMA • Args RP SEMI

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp   go to state 99
    ID    go to state 49
    Args  go to state 108


State 104

   54 Args: Args COMMA • Exp

    IDENTIFIER       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    MINUS            shift, and go to state 35
    LP               shift, and go to state 36
    NOT              shift, and go to state 38
    T_READ           shift, and go to state 45

    Exp  go to state 109
    ID   go to state 49


State 105

   47 Exp: ID LP Args RP •

    $default  reduce using rule 47 (Exp)


State 106

   22 statement: T_IF LP Exp RP compound_statement •
   23          | T_IF LP Exp RP compound_statement • T_ELSE compound_statement

    T_ELSE  shift, and go to state 110

    $default  reduce using rule 22 (statement)


State 107

   24 statement: T_WHILE LP Exp RP compound_statement •

    $default  reduce using rule 24 (statement)


State 108

   19 statement: T_PRINT LP Exp COMMA Args • RP SEMI
   54 Args: Args • COMMA Exp

    COMMA  shift, and go to state 104
    RP     shift, and go to state 111


State 109

   30 Exp: Exp • ASSIGNOP Exp
   31    | Exp • AND Exp
   32    | Exp • OR Exp
   33    | Exp • GE Exp
   34    | Exp • LE Exp
   35    | Exp • GEQ Exp
   36    | Exp • LEQ Exp
   37    | Exp • EQ Exp
   38    | Exp • NE Exp
   39    | Exp • PLUS Exp
   40    | Exp • MINUS Exp
   41    | Exp • STAR Exp
   42    | Exp • DIV Exp
   43    | Exp • MOD Exp
   54 Args: Args COMMA Exp •

    AND       shift, and go to state 62
    OR        shift, and go to state 63
    LEQ       shift, and go to state 64
    GEQ       shift, and go to state 65
    EQ        shift, and go to state 66
    NE        shift, and go to state 67
    MOD       shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    ASSIGNOP  shift, and go to state 73
    LE        shift, and go to state 74
    GE        shift, and go to state 75

    $default  reduce using rule 54 (Args)


State 110

   23 statement: T_IF LP Exp RP compound_statement T_ELSE • compound_statement

    LC  shift, and go to state 16

    compound_statement  go to state 112


State 111

   19 statement: T_PRINT LP Exp COMMA Args RP • SEMI

    SEMI  shift, and go to state 113


State 112

   23 statement: T_IF LP Exp RP compound_statement T_ELSE compound_statement •

    $default  reduce using rule 23 (statement)


State 113

   19 statement: T_PRINT LP Exp COMMA Args RP SEMI •

    $default  reduce using rule 19 (statement)
